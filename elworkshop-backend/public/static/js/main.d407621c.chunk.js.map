{"version":3,"sources":["AppContext.js","services/auth-services.js","components/auth/AuthForm.js","hooks/useForm.js","components/auth/Login.js","components/auth/Signup.js","services/job-services.js","components/home/Home.js","components/home/Landing.js","components/common/Profile.js","Router.js","components/common/Navbar.js","App.js","serviceWorker.js","index.js"],"names":["AppContext","createContext","AppProvider","children","initialUserState","JSON","parse","localStorage","getItem","useState","user","setUser","userContext","resetUserContext","Provider","value","base_url","AuthForm","submit","action","phone_number","password","confirm_password","handleChange","spinnerState","form","phoneInputState","setPhoneInputState","passwordInputState","setPasswordInputState","confPasswordInputState","setConfPasswordInputState","isButtonDisabled","errorMessage","state","setState","minLength","oneCap","oneLow","oneNumber","passwordValidationObj","setPasswordValidationObj","now","moment","maxDate","subtract","format","useEffect","inputValidation","event","target","name","phoneNumber","length","test","validatePhoneNumber","regEXlowcase","regEXuppercase","regEXnumber","regEXminlength","prevState","validatePassword","className","to","onSubmit","uk-icon","onChange","type","required","defaultValue","max","diff","disabled","uk-spinner","locale","useForm","setForm","resetForm","handleInput","handleFileInput","files","handleSearchbarInput","Login","useContext","push","useHistory","_id","data","preventDefault","axios","post","then","res","token","setItem","stringify","catch","msg","response","UIkit","notification","message","pos","status","Signup","setSpinnerState","console","log","validateEmail","email","Home","job","buttonText","get","headers","Authorization","getUserJob","jobs","currentJob","createJob","clear","jobID","patch","editJob","htmlFor","id","category","placeholder","description","hourly_rate","Landing","setJobs","map","index","key","width","height","src","profile_picture","alt","first_name","last_name","Profile","url","isUserEditing","showNewProfilePic","file","imagePreviewUrl","imgPreviewState","setImgPreviewState","handleSubmit","formData","FormData","append","editProfile","toggleIsUserEditing","document","getElementById","date_of_birth","uk-form-custom","style","reader","FileReader","onloadend","result","readAsDataURL","accept","onClick","uk-tab","href","uk-switcher","undefined","maxLength","hidden","validateDate","Router","exact","path","Navbar","App","Boolean","window","location","hostname","match","use","Icons","WithRouterAndProvider","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.d407621c.chunk.js","sourcesContent":["  \nimport React, { createContext, useState } from 'react';   // Import React and 2 hooks for context-creation and state-manipulation\n\n// Create context object, and export it so children components can use it through the useContext hook\nexport const AppContext = createContext();\n\n// Create Provider component \nconst AppProvider = ({ children }) => {\n\n  // Obtain user data from the localStorage, or set it as an empty object in case there is no user stored\n  const initialUserState = JSON.parse( localStorage.getItem('user') ) || {};\n\n  // Declare user state variable and setUser function to update the user state variable\n  const [ user, setUser ] = useState(initialUserState);\n  \n  // Declare resetUserContext function that will allow us to reset the user context\n  const resetUserContext = () => {\n\n    setUser({});    // Sets user context to an empty object \n\n  };\n\n  // Create the context objects to be passed as props in the Provider, with our created state and functions\n  const userContext = { user, setUser, resetUserContext };\n\n  // Return a context Provider component, sending the userContext as value prop\n  return (\n    <AppContext.Provider value={ userContext }>\n      { children }\n    </AppContext.Provider>\n  );\n\n};\n\nexport default AppProvider;","import axios from 'axios';                      // Import axios to enable API calls to our back-end\n\n// Set URL according to environment\nconst isProduction = process.env.NODE_ENV === 'production';\nconst base_url = isProduction ? 'http://54.163.77.88/api' : process.env.REACT_APP_API_URL;\n\n// Export signup function, which receives data as parameters to enable signup\nexport const signup = (data) => {\n  \n  // Return a call to our /signup route, while sending the parameters obtained from the form/front-end\n  return axios.post(`${base_url}/signup`, data);\n\n};\n\n// Export login function, which receives data as parameters to enable login\nexport const login = (data) => {\n\n  // Return a call to our /login route, while sending the parameters obtained from the form/front-end\n  return axios.post(`${base_url}/login`, data);\n\n};\n\n// Export logout function, which \"erases\" the token from the localStorage, and without a token any user\n// that is not logged in will not be able to access the routes that require authentication/token\nexport const logout = () => {\n\n  localStorage.clear();\n\n};\n\n// Export edit function, which receives data as parameters to enable profile edition\nexport const editProfile = (data) => {\n\n  const token = localStorage.getItem('token');  // Get token from localStorage\n\n  // Return a call to our /edit route, while sending the parameters obtained from the form/front-end\n  return axios.patch(`${base_url}/profile`, data, {\n    headers: {\n      Authorization: token,                     // Send token in request headers (check api/helpers/auth-helper)\n      \"Content-Type\": \"multipart/form-data\"     // Set content as multipart/form-data for files and text\n    }\n  });\n\n};","import React, { Fragment, useEffect, useState } from 'react';                        // Import React\nimport { NavLink } from 'react-router-dom';       // Import NavLink for \"navigation\"\nimport moment from 'moment';                                    // Import momentjs for date formatting\n\n// Declare AuthForm functional component, receives action variable for conditional rendering,\n// phone_number, password and confirm_password variables from form state variable, and submit and handleChange functions\nconst AuthForm = ( { submit, action, phone_number = '', password = '', confirm_password = '', handleChange, spinnerState, form } ) => {\n\n  const [ phoneInputState, setPhoneInputState ] = useState(null)\n  const [ passwordInputState, setPasswordInputState ] = useState(null)\n  const [ confPasswordInputState, setConfPasswordInputState ] = useState(null)\n  const [ state, setState ] = useState({\n    isButtonDisabled: true,\n    errorMessage: null\n  });\n  const [ passwordValidationObj, setPasswordValidationObj ] = useState({minLength: false, oneCap: false, oneLow: false, oneNumber: false})\n  const now = moment();\n  const maxDate = moment().subtract(18, 'years').format(\"YYYY-MM-DD\")\n\n  useEffect( () => {\n    if ( phoneInputState === 'uk-form-success' && passwordInputState === 'uk-form-success' && confPasswordInputState === 'uk-form-success' && action === 'signup' )\n      setState({ isButtonDisabled: false, errorMessage: null });\n    else if ( phoneInputState === 'uk-form-success' && action === 'login' )\n      setState({ isButtonDisabled: false, errorMessage: null });\n    else\n      setState({ isButtonDisabled: true, errorMessage: null });\n    if ( spinnerState )\n      setState({ isButtonDisabled: false, errorMessage: null });\n  }, [phoneInputState, passwordInputState, confPasswordInputState, spinnerState])\n\n  const validatePhoneNumber = (phoneNumber) => {\n    if ( phoneNumber.length !== 10 ) return false;\n    \n    const regEx = /^[0-9]*$/;\n    return regEx.test(phoneNumber);\n  }\n\n  const validatePassword = (password) => {\n    const regEx = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[a-zA-Z\\d@$!%*?&-_/]{8,}$/;\n    const regEXlowcase = /^(?=.*[a-z])/\n    const regEXuppercase = /^(?=.*[A-Z])/\n    const regEXnumber = /^(?=.*\\d)/\n    const regEXminlength = /[A-Za-z\\d@$!%*?&-_/]{8,}$/\n    setPasswordValidationObj( prevState => ({...prevState, oneLow: regEXlowcase.test(password)}) )\n    setPasswordValidationObj( prevState => ({...prevState, oneCap: regEXuppercase.test(password)}) )\n    setPasswordValidationObj( prevState => ({...prevState, oneNumber: regEXnumber.test(password)}) )\n    setPasswordValidationObj( prevState => ({...prevState, minLength: regEXminlength.test(password)}) )\n    return regEx.test(password);\n  }\n\n  const inputValidation = (event) => {\n\n    const { name, value } = event.target;\n\n    handleChange(event);\n\n    switch( name ) {\n      case 'phone_number': {\n        if ( validatePhoneNumber(value) ) \n          setPhoneInputState('uk-form-success');\n        else \n          setPhoneInputState('uk-form-danger');\n        break;\n      }\n      case 'password': {\n        if ( action === 'login' ) return null\n        if (  validatePassword(value) )\n          setPasswordInputState('uk-form-success');\n        else\n          setPasswordInputState('uk-form-danger');\n        break;\n      }\n      case 'confirm_password': {\n        if ( value === password )\n          setConfPasswordInputState('uk-form-success')\n        else\n          setConfPasswordInputState('uk-form-danger')\n      }\n    }\n    \n  }\n\n  const validateDate = (event) => {\n    const { value } = event.target\n    if ( now.diff(value, 'years') < 18 ) {\n      setState( prevState => ({...prevState, isButtonDisabled: true, errorMessage: 'Debes tener al menos 18 años'}))\n    }\n    else if ( now.diff(value, 'years') > 99 ) {\n      setState( prevState => ({...prevState, isButtonDisabled: true, errorMessage: 'Introduce una fecha menor'}))\n    }\n    else {\n      setState( prevState => ({...prevState, errorMessage: null}))\n      form['date_of_birth'] = value\n    }\n  }\n\n  return (\n    <div className=\" uk-width-1-1 uk-margin-top uk-margin-remove-top@s\">\n\n      <div className=\"uk-margin\">\n\n        <h2>{action === \"signup\" ? \"Registro\" : \"Inicia Sesión\"}</h2>\n    \n        { action === \"signup\" ? (\n          <p>¿Ya tienes cuenta? \n            <NavLink to=\"/login\" className=\"links uk-margin-small-left\">\n              Accede aquí\n            </NavLink>\n          </p>\n          ) : (\n          <p>¿No tienes cuenta? \n            <NavLink to=\"/registro\" className=\"links uk-margin-small-left\">\n              Regístrate aquí\n            </NavLink>\n          </p>\n          )\n        }\n      \n      </div>\n\n        <form className=\"uk-form-stacked\" onSubmit={submit}>\n          \n          <div className=\"uk-margin\">\n            <label className=\"uk-form-label\">Número Telefónico:</label>\n            <div className=\"uk-inline uk-width-4-5 uk-width-1-3@s\">\n              <span className=\"uk-form-icon\" uk-icon=\"icon: receiver\"></span>\n              <input onChange={event => inputValidation(event)} name=\"phone_number\" value={phone_number} className={phoneInputState !== null ? `${phoneInputState} uk-input uk-width-1-1 uk-border-pill` : \"uk-input uk-width-1-1 uk-border-pill\"} type=\"number\" required />\n            </div>\n            { phoneInputState === 'uk-form-danger' ?\n                <div>\n                  <span className=\"uk-text-danger\">Introduce un número telefónico válido</span>\n                </div>\n              : null \n            }\n          </div>\n          { action === 'signup' ?\n            <Fragment>\n              <div className=\"uk-margin\">\n                <label className=\"uk-form-label\">Nombre(s):</label>\n                <div className=\"uk-inline uk-width-4-5 uk-width-1-3@s\">\n                  <span className=\"uk-form-icon\" uk-icon=\"icon: user\"></span>\n                  <input name=\"first_name\" className=\"uk-input uk-width-1-1 uk-border-pill uk-text-center\" type=\"text\" onChange={handleChange} required />\n                </div>\n              </div>\n              <div className=\"uk-margin\">\n                <label className=\"uk-form-label\">Apellidos:</label>\n                <div className=\"uk-inline uk-width-4-5 uk-width-1-3@s\">\n                  <span className=\"uk-form-icon\" uk-icon=\"icon: user\"></span>\n                  <input name=\"last_name\" className=\"uk-input uk-width-1-1 uk-border-pill uk-text-center\" type=\"text\" onChange={handleChange} required />\n                </div>\n              </div>\n              <div className=\"uk-margin\">\n                <label className=\"uk-form-label\">Fecha de nacimiento:</label>\n                <div className=\"uk-inline uk-width-4-5 uk-width-1-3@s\">\n                  <span className=\"uk-form-icon\" uk-icon=\"icon: user\"></span>\n                  <input name=\"date_of_birth\" defaultValue={maxDate} className=\"uk-input uk-width-1-1 uk-border-pill uk-text-center\" type=\"date\" max={maxDate} onChange={validateDate} required />\n                </div>\n                <p className=\"uk-text-center uk-text-danger\">{state.errorMessage}</p>\n              </div>\n            </Fragment> : null\n          }\n          <div className=\"uk-margin\">\n            <label className=\"uk-form-label\">Contraseña:</label>\n            <div className=\"uk-inline uk-width-4-5 uk-width-1-3@s\">\n              <span className=\"uk-form-icon\" uk-icon=\"icon: lock\"></span>\n              <input\n                onChange={event => inputValidation(event)}\n                name=\"password\"\n                value={password}\n                className={\n                  action === 'signup' ?\n                    passwordInputState !== null ? `${passwordInputState} uk-input uk-width-1-1 uk-border-pill` : \"uk-input uk-width-1-1 uk-border-pill\"\n                  : \"uk-input uk-width-1-1 uk-border-pill\"}\n                type=\"password\"\n                required={true}\n              />\n            </div>\n            <div className=\"uk-margin uk-flex uk-flex-center\">\n                { action === 'signup' ?\n                  <div className=\"uk-width-1-2@s uk-flex uk-flex-column\">\n                    <div className=\"uk-width-1-1 uk-flex\">\n                        { passwordValidationObj.oneCap ?\n                          <div className=\"uk-width-1-2 uk-flex uk-flex-center@s uk-flex-middle uk-text-success\">\n                            <span uk-icon=\"check\" className=\"uk-width-1-6\"></span> Una letra mayúscula\n                          </div>\n                          : \n                          <div className=\"uk-width-1-2 uk-flex uk-flex-center@s uk-flex-middle\">\n                            <span uk-icon=\"warning\" className=\"uk-width-1-6\"></span>  Una letra mayúscula\n                          </div>\n                        }\n                        { passwordValidationObj.oneNumber ?\n                          <div className=\"uk-width-1-2 uk-flex uk-flex-middle uk-text-success\">\n                            <span uk-icon=\"check\" className=\"uk-width-1-6\"></span> Un número\n                          </div>\n                          : \n                          <div className=\"uk-width-1-2 uk-flex uk-flex-middle\">\n                            <span uk-icon=\"warning\" className=\"uk-width-1-6\"></span>  Un número\n                          </div>\n                        }\n                        \n                    </div>\n                    <div className=\"uk-width-1-1 uk-flex\">\n                      { passwordValidationObj.oneLow ?\n                        <div className=\"uk-width-1-2 uk-flex uk-flex-center@s uk-flex-middle uk-text-success\">\n                          <span uk-icon=\"check\" className=\"uk-width-1-6\"></span> Una letra minúscula\n                        </div>\n                        : \n                        <div className=\"uk-width-1-2 uk-flex uk-flex-center@s uk-flex-middle\">\n                          <span uk-icon=\"warning\" className=\"uk-width-1-6\"></span>  Una letra minúscula\n                        </div>\n                      }\n                      { passwordValidationObj.minLength ?\n                        <div className=\"uk-width-1-2 uk-flex uk-flex-left uk-flex-middle uk-text-success\">\n                          <span uk-icon=\"check\" className=\"uk-width-1-6\"></span> Mínimo 8 caracteres\n                        </div>\n                        : \n                        <div className=\"uk-width-1-2 uk-flex uk-flex-left uk-flex-middle\">\n                          <span uk-icon=\"warning\" className=\"uk-width-1-6\"></span> Mínimo 8 caracteres\n                        </div>\n                      }\n                    </div>\n                  </div>\n                 : \n                  <NavLink to=\"/recuperar\" className=\"links\">\n                    ¿Olvidaste tu contraseña?\n                  </NavLink>\n                }\n              </div>\n            </div>\n            { action === \"signup\" ? (\n            <div className=\"uk-margin\">\n              <label className=\"uk-form-label\">Confirma tu contraseña:</label>\n              <div className=\"uk-inline uk-width-4-5 uk-width-1-3@s\">\n                <span className=\"uk-form-icon\" uk-icon=\"icon: lock\"></span>\n                <input\n                  onChange={event => inputValidation(event)}\n                  name=\"confirm_password\"\n                  value={confirm_password}\n                  className={passwordInputState !== null ? `${confPasswordInputState} uk-input uk-width-1-1 uk-border-pill` : \"uk-input uk-width-1-1 uk-border-pill\"}\n                  type=\"password\"\n                />\n              </div>\n              { confPasswordInputState === 'uk-form-danger' ?\n                  <div>\n                    <span className=\"uk-text-danger\">Asegúrate de introducir la misma contraseña</span>\n                  </div>\n                : null \n              }\n            </div>\n            ) : null\n          }\n            \n            \n\n          \n\n          <button disabled={state.isButtonDisabled} className=\"uk-button uk-button-primary uk-border-pill uk-width-3-5 uk-width-1-5@s uk-margin\" type=\"submit\">\n            {action === \"signup\" ? spinnerState ? \"Registrando\" : \"Registrar\" : \"Entrar\"} <div className={ spinnerState ? 'uk-visible' : 'uk-hidden'} uk-spinner=\"true\"></div>\n          </button>\n\n        </form>\n    </div>\n  )\n\n}\n\nexport default AuthForm;","import { useState } from 'react';   // Import useState hook to create custom hook\nimport moment from 'moment'\nimport 'moment/locale/es'  // without this line it didn't work\nmoment.locale('es')\n\n// Declare hook as a React functional component\nconst useForm = () => {\n  \n  // Declare form state variable and setForm function to update the form state variable\n  const [ form, setForm ] = useState({});\n  // Declare handleInput function for input data manipulation\n  const handleInput = (event) => {\n    \n    // Destructure input name and value (data that is being changed by user)\n    const { name, value } = event.target;\n\n    // When using checkboxes, store the values in an array\n    // if ( event.target.type === 'checkbox' ) {\n    //   const { checked } = event.target\n    //   setForm( prevState => ({...prevState, [name]: checked}) );\n\n    // } else \n      // Update the form state without erasing previos values (with prevState)\n      setForm( prevState => ({...prevState, [name]: value}) );\n    \n  };\n\n  // Declare handleInputFile function for files manipulation\n  const handleFileInput = (event) => {\n\n    // Destructure input name and files (data that is being changed by user)\n    const { name, files } = event.target;\n\n    // Update the form state without erasing previos values (with prevState)\n    setForm( prevState => ({...prevState, [name]: files}) );\n\n  };\n\n  const handleSearchbarInput = (name, value) => {\n    \n    // Update the form state without erasing previos values (with prevState)\n    setForm( prevState => ({...prevState, [name]: value}) );\n\n  };\n\n  const resetForm = () => setForm({});\n\n  // Return the form state variable and input handling functions\n  return { form, setForm, resetForm, handleInput, handleFileInput, handleSearchbarInput };\n\n};\n\nexport default useForm;","import React, { useContext, useEffect } from 'react';              // Import React and useContext hook\nimport { useHistory } from 'react-router-dom';          // Import useHistory for \"redirection\"\nimport { AppContext } from '../../AppContext';          // Import AppContext to use created context\nimport { login } from '../../services/auth-services';   // Import login service for API call\nimport AuthForm from './AuthForm';                      // Import AuthForm react component\nimport useForm from '../../hooks/useForm';              // Import useForm custom hook\nimport UIkit from 'uikit';                              // Import UIkit for notifications\n\n// Declare Login functional component\nconst Login = () => {\n\n  const { form, handleInput } = useForm();                // Destructure form state variable and handleInput function\n  const { user, setUser } = useContext(AppContext);   // Destructure setUser function for user state manipulation\n  const { push } = useHistory();                          // Destructure push method from useHistory to \"redirect\" user\n\n  useEffect( () => {\n\n    if ( user._id )               // If there is no user logged in, send a notification and \"redirect\" to login\n      return push('/home');       // If not logged in, \"redirect\" user to login\n\n  })\n\n  // Declare function for form submit event\n  const handleSubmit = (event) => {\n\n    event.preventDefault();                     // Prevent page reloading after submit action\n    \n    // Call signup service with form state variable as parameter, which includes form data for e-mail and password\n    login(form)\n    .then( res => {\n      \n      const { user, token } = res.data;         // Destructure user and token from response, sent by API\n      \n      // Store user and token in localStorage\n      localStorage.setItem('user', JSON.stringify(user));\n      localStorage.setItem('token', token);\n\n      setUser(user);    // Modify user state variable, setting the user data in the state\n      push('/home')\n\n    })\n    .catch( res => {\n\n      const { msg } = res.response.data;\n\n      // Send UIkit error notification\n      UIkit.notification({\n        message: `<p class=\"uk-text-center\">${msg}</p>`,\n        pos: 'bottom-center',\n        status: 'danger'\n      });\n\n    });\n  };\n\n  return (\n    <div className=\"uk-section\">\n      <div className=\"uk-container\">\n        <AuthForm\n          submit={handleSubmit}\n          action=\"login\"\n          handleChange={handleInput}\n          {...form}\n        />\n      </div>\n    </div>\n  );\n\n};\n\nexport default Login;","import React, { useContext, useEffect, useState } from 'react';                // Import React and useContext hook\nimport { useHistory } from 'react-router-dom';            // Import useHistory for \"redirection\"\nimport { AppContext } from '../../AppContext';            // Import AppContext to use created context\nimport { signup } from '../../services/auth-services';    // Import signup service for API call\nimport AuthForm from './AuthForm';                        // Import AuthForm react component\nimport useForm from '../../hooks/useForm';                // Import useForm custom hook\nimport UIkit from 'uikit';                                // Import UIkit for notifications\nimport moment from 'moment';                                    // Import momentjs for date formatting\n\n// Declare Signup functional component\nconst Signup = () => {\n\n  const { form, handleInput } = useForm();      // Destructure form state variable and handleInput function\n  const { user, setUser } = useContext(AppContext);   // Destructure setUser function for user state manipulation\n  const { push } = useHistory();                // Destructure push method from useHistory to \"redirect\" user\n  const [ spinnerState, setSpinnerState ] = useState(false)\n  const maxDate = moment().subtract(18, 'years').format(\"YYYY-MM-DD\")\n\n  useEffect( () => {\n    \n    if ( user._id ) {    // If there is no user logged in, send a notification and \"redirect\" to login\n      \n      return push('/home');         // If not logged in, \"redirect\" user to login\n\n    };\n  })\n\n  // Declare function for form submit event\n  const handleSubmit = (event) => {\n\n    event.preventDefault();                     // Prevent page reloading after submit action\n    setSpinnerState(true)\n    if ( !form['date_of_birth'] ) form['date_of_birth'] = maxDate\n    \n    // Call signup service with form state variable as parameter, which includes form data for e-mail and password\n    signup(form)\n    .then( res => {\n\n      const { user, token, msg } = res.data;\n      localStorage.setItem('user', JSON.stringify(user));\n      localStorage.setItem('token', token);\n\n      setSpinnerState(false)\n      setUser(user)\n      push('/home');    // \"Redirect\" user to registration information page\n\n      // Send UIkit success notification\n      UIkit.notification({\n        message: `<p class=\"uk-text-center\"><span uk-icon='check'></span> ${msg}</p>`,\n        pos: 'bottom-center',\n        status: 'success'\n      });\n\n    })\n    .catch( res => {\n\n      console.log(res.response)\n\n      const { msg } = res.response.data;\n      setSpinnerState(false);\n      \n      // Send UIkit error notification\n      UIkit.notification({\n        message: `<p class=\"uk-text-center\">${msg}</p>`,\n        pos: 'bottom-center',\n        status: 'danger'\n      });\n\n    });\n    \n  };\n\n  const validateEmail = (email) => {\n    const regEx = /\\S+@\\S+\\.\\S+/;\n    return regEx.test(email);\n  }\n\n  return (\n    <div className=\"uk-section\">\n      <div className=\"uk-container\">\n        <AuthForm\n          submit={handleSubmit}\n          action=\"signup\"\n          handleChange={handleInput}\n          validateEmail={validateEmail}\n          {...form}\n          spinnerState={spinnerState}\n          form={form}\n        />\n      </div>\n    </div>\n  );\n\n};\n\nexport default Signup;","import axios from 'axios';                      // Import axios to enable API calls to our back-end\n\n// Set URL according to environment\nconst isProduction = process.env.NODE_ENV === 'production';\nconst base_url = isProduction ? 'http://54.163.77.88/api/jobs' : `${process.env.REACT_APP_API_URL}/jobs`;\n\n// Export get function to retrieve all consultations of the current logged in user\nexport const getAllJobs = () => {\n\n  return axios.get(`${base_url}/all`);\n\n};\n\n// Export create facility function, which receives data as parameters to enable consultation creation\nexport const createJob = (data) => {\n\n  const token = localStorage.getItem('token');  // Get token from localStorage\n\n  // Return a call to our /new route, while sending the parameters obtained from the form/front-end\n  return axios.post(`${base_url}/`, data, {\n    headers: {\n      Authorization: token,                     // Send token in request headers (check api/helpers/auth-helper)\n    }\n  });\n\n};\n\nexport const getOneJob = (jobID) => {\n\n  const token = localStorage.getItem('token');  // Get token from localStorage\n\n  return axios.get(`${base_url}/${jobID}`);\n\n};\n\nexport const getUserJob = () => {\n\n  const token = localStorage.getItem('token');  // Get token from localStorage\n\n  return axios.get(`${base_url}/`, {\n    headers: {\n      Authorization: token,                     // Send token in request headers (check api/helpers/auth-helper)\n    }\n  });\n\n};\n\nexport const editJob = (jobID, data) => {\n\n  const token = localStorage.getItem('token');  // Get token from localStorage\n\n  return axios.patch(`${base_url}/${jobID}`, data, {\n    headers: {\n      Authorization: token,                     // Send token in request headers (check api/helpers/auth-helper)\n    }\n  });\n\n}\n\nexport const deleteJob = (jobID) => {\n\n  const token = localStorage.getItem('token');  // Get token from localStorage\n\n  return axios.delete(`${base_url}/${jobID}`, {\n    headers: {\n      Authorization: token,                     // Send token in request headers (check api/helpers/auth-helper)\n    }\n  });\n\n}","import React, { useEffect, useContext, useState } from 'react'\nimport { useHistory } from 'react-router-dom';\nimport { AppContext } from '../../AppContext';\nimport UIkit from 'uikit';\nimport useForm from '../../hooks/useForm'\n\nimport { createJob, getUserJob, editJob } from '../../services/job-services'\n\nconst Home = () => {\n\n  const { user, resetUserContext } = useContext(AppContext); // Destructure user state variable\n  const { push } = useHistory();                    // Destructure push method from useHistory to \"redirect\" user\n  const { form, resetForm, handleInput } = useForm();\n  const [ state, setState ] = useState({\n    isButtonDisabled: false,\n    spinnerState: false,\n    errorMessage: null,\n    job: null,\n    buttonText: 'Cargando'\n  });\n\n  // Hook to update component when user state variable is modified\n  useEffect( () => {\n\n    if ( !user._id ) {    // If there is no user logged in, send a notification and \"redirect\" to login\n\n      // Send UIkit warning notification: User must log in\n      UIkit.notification({\n        message: `<span uk-icon='close'></span> Por favor inicia sesión.`,\n        pos: 'bottom-center',\n        status: 'warning'\n      });\n      \n      return push('/login');         // If not logged in, \"redirect\" user to login\n\n    };\n\n    getUserJob()\n    .then( res => {\n      const { jobs } = res.data\n      if ( jobs.length > 0 ) {\n        const currentJob = jobs[0]\n        setState( prevState => ({...prevState, job: currentJob, buttonText: 'Guardar cambios'}));\n      }\n      else\n        setState( prevState => ({...prevState, buttonText: 'Crear Chamba'}));\n    })\n    .catch( res => {\n      console.log(res)\n    })\n\n  }, [user] );\n\n  const handleSubmit = (event) => {\n\n    event.preventDefault();\n    setState( prevState => ({...prevState, isButtonDisabled: true, spinnerState: true}));\n\n    if ( state.job === null ) {\n      createJob(form)\n      .then( res => {           // Success -> notification and send to new consultation view,\n        const { job } = res.data    // Destructure updated preferences document from response\n        UIkit.notification({  // Send UIkit success notification\n          message: '<p class=\"uk-text-center\">La chamba fue creada exitosamente</p>',\n          pos: 'bottom-center',\n          status: 'success'\n        });\n        resetForm();\n        setState( prevState => ({...prevState, job: job, isButtonDisabled: false, spinnerState: false, buttonText: 'Guardar Cambios'}))\n\n      })\n      .catch( res => {          // Error -> notification and redirect if unauthorized\n        const { msg } = res.response.data;\n        if ( msg === 'Sesión expirada. Reinicia sesión por favor.' ) {\n          localStorage.clear();\n          resetUserContext();\n          UIkit.notification({  // Send UIkit error notification\n            message: `<p class=\"uk-text-center\">${msg}</p>`,\n            pos: 'bottom-center',\n            status: 'warning'\n          });\n          push('/login');\n        }\n        else\n          UIkit.notification({  // Send UIkit error notification\n            message: `<p class=\"uk-text-center\">${msg}</p>`,\n            pos: 'bottom-center',\n            status: 'warning'\n          });\n        setState( prevState => ({...prevState, isButtonDisabled: false, spinnerState: false}))\n      });\n    }\n    else {\n      editJob(state.job._id, form)\n      .then( res => {           // Success -> notification and send to new consultation view,\n        const { job } = res.data    // Destructure updated preferences document from response\n        UIkit.notification({  // Send UIkit success notification\n          message: '<p class=\"uk-text-center\">La chamba fue actualizada exitosamente</p>',\n          pos: 'bottom-center',\n          status: 'success'\n        });\n        resetForm();\n        setState( prevState => ({...prevState, job: job, isButtonDisabled: false, spinnerState: false, buttonText: 'Guardar Cambios'}))\n\n      })\n      .catch( res => {          // Error -> notification and redirect if unauthorized\n        const { msg } = res.response.data;\n        if ( msg === 'Sesión expirada. Reinicia sesión por favor.' ) {\n          localStorage.clear();\n          resetUserContext();\n          UIkit.notification({  // Send UIkit error notification\n            message: `<p class=\"uk-text-center\">${msg}</p>`,\n            pos: 'bottom-center',\n            status: 'warning'\n          });\n          push('/login');\n        }\n        else\n          UIkit.notification({  // Send UIkit error notification\n            message: `<p class=\"uk-text-center\">${msg}</p>`,\n            pos: 'bottom-center',\n            status: 'warning'\n          });\n        setState( prevState => ({...prevState, isButtonDisabled: false, spinnerState: false}))\n      });\n    }\n\n  }\n  \n  return (\n    <div className=\"content\">\n      <div className=\"uk-section\">\n        <h2 className=\"uk-margin-small-top\">¡Bienvenido!</h2>\n\n        <div className=\"uk-container uk-margin uk-flex uk-flex-center\">\n          <form onSubmit={handleSubmit} className=\"uk-width-1-2@s\">\n            <fieldset className=\"uk-fieldset\" />\n\n            <legend className=\"uk-legend\">Mi Chamba</legend>\n            <div className=\"uk-margin uk-text-left\">\n              <label className=\"uk-form-label uk-margin-small-left\" htmlFor=\"category-input\">Nombre:</label>\n              <input className=\"uk-input uk-border-pill uk-text-center\" id=\"category-input\" onChange={handleInput} name=\"category\" type=\"text\" defaultValue={ state.job ? state.job.category : '' } placeholder=\"Describe tu chamba...\" required />\n            </div>\n            <div className=\"uk-margin uk-text-left\">\n              <label className=\"uk-form-label uk-margin-small-left\" htmlFor=\"description-input\">Descripción:</label>\n              <input className=\"uk-input uk-border-pill uk-text-center\" id=\"description-input\" onChange={handleInput} name=\"description\" type=\"text\" defaultValue={ state.job ? state.job.description : '' } placeholder=\"Describe tu chamba...\" required />\n            </div>\n            <div className=\"uk-margin uk-text-left\">\n              <label className=\"uk-form-label uk-margin-small-left\" htmlFor=\"hourly-rate-input\">Precio por hora (mxn):</label>\n              <input className=\"uk-input uk-border-pill uk-text-center\" id=\"hourly-rate-input\" onChange={handleInput} name=\"hourly_rate\" type=\"number\" defaultValue={ state.job ? state.job.hourly_rate : '' } placeholder=\"Precio por hora...\" required />\n            </div>\n            <div className=\"uk-width-1-1 uk-flex uk-flex-center uk-margin-medium\">\n              <button type=\"submit\" className=\"uk-button uk-button-primary uk-button uk-border-pill uk-width-2-3 uk-width-1-2@m uk-margin\" disabled={state.isButtonDisabled} >\n                { state.buttonText }  <div className={ state.spinnerState ? 'uk-visible' : 'uk-hidden'} uk-spinner=\"true\"></div>\n              </button>\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Home","import React, { useEffect, useState } from 'react'\nimport { useHistory } from 'react-router-dom';\n\nimport { getAllJobs } from '../../services/job-services'\n\nconst Landing = () => {\n\n  const { push } = useHistory();                    // Destructure push method from useHistory to \"redirect\" user\n  const [ jobs, setJobs ] = useState([])\n\n  // Hook to update component when user state variable is modified\n  useEffect( () => {\n\n    getAllJobs()\n    .then( res => {\n      const { jobs } = res.data\n      setJobs(jobs)\n    })\n    .catch( res => {\n      console.log(res)\n    })\n\n  }, [] );\n  \n  return (\n    <div className=\"content\">\n      <div className=\"uk-section\">\n      <h1>El Workshop</h1>\n      <h2>¡Encuentra la persona perfecta para echarte la mano!</h2>\n      <div className=\"uk-overflow-auto\">\n        { jobs.length < 1 ? (\n            <h4 className=\"uk-text-danger\">No existen chambas ahorita :(</h4>\n          ) : null\n        }\n        <table className=\"uk-table uk-table-striped uk-table-hover uk-table-middle\">\n          <thead>\n            <tr>\n              <th className=\"uk-text-center\">Trabajador</th>\n              <th className=\"uk-text-center\">Teléfono</th>\n              <th className=\"uk-text-center\">Chamba</th>\n              <th className=\"uk-text-center uk-visible@s\">Descripción</th>\n              <th className=\"uk-text-center\">Precio</th>\n            </tr>\n          </thead>\n          <tbody>\n            { jobs ? \n                jobs.map( (job, index) => \n                  <tr key={index} >\n                    <td className=\"uk-text-center uk-flex uk-flex-center uk-flex-middle\">\n                      <div className=\"uk-width-1-3 uk-margin-small-right\">\n                        <img className=\"uk-border-circle\" width={40} height={40} src={job.user.profile_picture} alt=\"User profile\" />\n                      </div>\n                      {job.user.first_name} {job.user.last_name}\n                    </td>\n                    <td className=\"uk-text-center\">{job.user.phone_number}</td>\n                    <td className=\"uk-text-center uk-visible@s\">{job.category}</td>\n                    <td className=\"uk-text-center uk-visible@s uk-width-1-3@s\">{job.description}</td>\n                    <td className=\"uk-text-center uk-visible@s\">{`$ ${job.hourly_rate} c/hora`}</td>\n                    \n                  </tr>\n                )\n              : <tr>\n                  <td className=\"uk-text-center\">Cargando</td>\n                  <td className=\"uk-text-center uk-visible@s\">Cargando</td>\n                  <td className=\"uk-text-center uk-visible@s\">Cargando</td>\n                  <td className=\"uk-text-center uk-visible@s\">Cargando</td>\n                  <td className=\"uk-text-center\">Cargando</td>\n                </tr>\n          }\n          </tbody>\n        </table>\n      </div>  \n      </div>\n    </div>\n  )\n}\n\nexport default Landing","import React, { Fragment, useEffect, useContext, useState } from 'react';           // Import React and useContext hook\nimport { useHistory } from 'react-router-dom';                  // Import useHistory for \"redirection\"\nimport { AppContext } from '../../AppContext';                  // Import AppContext to use created context\nimport { editProfile } from '../../services/auth-services';  // Import edit API call\nimport useForm from '../../hooks/useForm';                      // Import useForm custom hook\nimport UIkit from 'uikit';                                      // Import UIkit for notifications\nimport moment from 'moment';                                    // Import momentjs for date formatting\n\nconst Profile = ({ push, url }) => {\n\n  const { form, resetForm, handleInput, handleFileInput } = useForm();\n  const [ state, setState ] = useState({\n    isUserEditing: false,\n    isButtonDisabled: true,\n    spinnerState: false,\n    errorMessage: null,\n    showNewProfilePic: false\n  });\n  const [ imgPreviewState, setImgPreviewState ] = useState({file: '',imagePreviewUrl: ''})\n  \n  const { user, setUser, resetUserContext } = useContext(AppContext); // Destructure user state variable\n\n  const now = moment();\n  const maxDate = moment().subtract(18, 'years').format(\"YYYY-MM-DD\")\n\n  useEffect( () => {\n\n    if ( !user._id ) {    // If there is no user logged in, send a notification and \"redirect\" to login\n\n      // Send UIkit warning notification: User must log in\n      UIkit.notification({\n        message: \"<p class='uk-text-center'>Por favor inicia sesión</p>\",\n        pos: 'bottom-center',\n        status: 'warning'\n      });\n      \n      return push('/login');         // If not logged in, \"redirect\" user to login\n\n    }\n\n  }, [user] );\n\n  \n\n  // Declare function for form submit event\n  const handleSubmit = (event) => {\n\n    event.preventDefault();               // Prevent page reloading after submit action\n    setState( prevState => ({...prevState, spinnerState: true, isButtonDisabled: true}))\n\n    // if ( form.first_name && form.last_name1 && form.last_name2 && form.date_of_birth || user.isProfileComplete ) form['isProfileComplete'] = true\n\n    // if ( form.profile_picture ) {\n      \n    const formData = new FormData();      // Declare formData as new instance of FormData class\n    const { profile_picture } = form;     // Destructure profile_picture from form\n\n    // Iterate through every key in form object and append name:value to formData\n    for (let key in form) {\n\n      // If profile_picture, append as first item in array (currently 1 file allowed, index 0)\n      if ( key === 'profile_picture' ) formData.append(key, profile_picture[0]);\n\n      else formData.append(key, form[key]);\n      \n    }\n      \n    // Call edit service with formData as parameter, which includes form data for user profile information\n    editProfile(formData)\n    .then( res => {\n\n      const { user } = res.data   // Destructure updated user document from response\n      \n      setUser(user);              // Modify user state variable with updated information\n      resetForm();\n      setState( prevState => ({...prevState, isUserEditing: false, spinnerState: false}))\n\n      // Send UIkit success notification\n      UIkit.notification({\n        message: `<p class=\"uk-text-center\">Tu perfil fue actualizado exitosamente</p>`,\n        pos: 'bottom-center',\n        status: 'success'\n      });\n\n    })\n    .catch( res => {\n\n      const { msg } = res.response.data;\n      if ( msg === 'Sesión expirada. Reinicia sesión por favor.' ) {\n        localStorage.clear();\n        resetUserContext();\n        UIkit.notification({\n          message: `<p class=\"uk-text-center\">${msg}</p>`,\n          pos: 'bottom-center',\n          status: 'warning'\n        });\n        push('/login');\n      }\n      else \n        UIkit.notification({\n          message: `<p class=\"uk-text-center\">${msg}</p>`,\n          pos: 'bottom-center',\n          status: 'danger'\n        });\n      setState( prevState => ({...prevState, spinnerState: false, isButtonDisabled: false}))\n\n    });\n\n  };\n\n  const toggleIsUserEditing = (event) => {\n    event.preventDefault()\n    resetForm();\n    document.getElementById('date_of_birth_input').value = moment(user.date_of_birth).format('YYYY-MM-DD')\n    setState( prevState => ({...prevState, isUserEditing: !prevState.isUserEditing, errorMessage: null, isButtonDisabled: false}))\n  }\n\n  const validateDate = (event) => {\n    const { value } = event.target\n    if ( now.diff(value, 'years') < 18 ) {\n      setState( prevState => ({...prevState, isButtonDisabled: true, errorMessage: 'Debes tener 18 años'}))\n    }\n    else if ( now.diff(value, 'years') > 99 ) {\n      setState( prevState => ({...prevState, isButtonDisabled: true, errorMessage: 'Introduce una fecha menor'}))\n    }\n    else {\n      setState( prevState => ({...prevState, isButtonDisabled: false, errorMessage: null}))\n    }\n  }\n\n  const handleImageChange = (event) => {\n    event.preventDefault();\n    handleFileInput(event)\n\n    let reader = new FileReader();\n    let file = event.target.files[0];\n\n    if (!file) \n      return\n    else {\n      reader.onloadend = () => {\n        setImgPreviewState({\n          file: file,\n          imagePreviewUrl: reader.result\n        });\n        setState( prevState => ({...prevState, showNewProfilePic: true}) )\n      }\n      reader.readAsDataURL(file)\n    }\n  }\n\n  const cancelImageChange = () => {\n    delete form['profile_picture']\n    setState( prevState => ({...prevState, showNewProfilePic: false}) )\n  }\n\n  return (\n    <Fragment>\n      <div className=\"uk-width-1-1 uk-inline\">\n        <img className=\"uk-border-circle\" width={128} height={128} src={ state.showNewProfilePic ? imgPreviewState.imagePreviewUrl : user.profile_picture} alt=\"User profile\" />\n          \n        <div className=\"js-upload uk-position-right-bottom uk-icon-button avatar\" uk-icon=\"pencil\" uk-form-custom=\"true\" style={{\"display\": \"box!important\"}}>\n          <input onChange={handleImageChange} name=\"profile_picture\" type=\"file\" accept=\"image/*\" />\n        </div>\n        \n        \n        \n      </div>\n      { form['profile_picture'] ?\n        <div className=\"uk-width-1-1 uk-flex uk-flex-center uk-margin-small\">\n          <div className=\"uk-width-1-2 uk-width-1-6@s uk-flex uk-flex-around\">\n            <a className=\"uk-icon-button uk-text-danger\" uk-icon=\"ban\" onClick={cancelImageChange}></a>\n            <a className=\"uk-icon-button uk-text-success\" uk-icon=\"check\" onClick={handleSubmit}></a>\n          </div>\n        </div>\n        : null\n      }\n      <h2 className=\"uk-margin-small-top\">{user.first_name} {user.last_name}</h2>\n      <div className=\"uk-width-1-1 uk-flex uk-flex-center uk-margin-small-top\">\n        <ul className=\"uk-flex uk-flex-center uk-width-1-1 uk-margin-remove@s\" uk-tab=\"connect: #my-id\" >\n          <li className=\"uk-active\"><a href=\"#\" onClick={ state.isUserEditing ? toggleIsUserEditing : null }>Datos</a></li>\n        </ul>\n      </div>\n      <div id=\"my-id\" className=\"uk-switcher uk-flex uk-flex-center\" uk-switcher=\"true\">\n        <div className=\"uk-card uk-card-hover uk-card-body uk-padding-small uk-padding@s uk-width-1-2@s\">\n          <h4 className=\"uk-margin-remove-bottom\">Datos Personales</h4>\n          <a className={ state.isUserEditing ? \"uk-text-danger uk-position-top-right uk-position-small\" : \"eva-edit uk-position-top-right uk-position-small\"} href=\"#\" onClick={toggleIsUserEditing}>\n            <span uk-icon={state.isUserEditing ? \"ban\" : \"pencil\"}></span>\n          </a>\n          <a className={ state.isUserEditing ? \"uk-text-danger\" : \"eva-edit\"} href=\"#\" onClick={toggleIsUserEditing}>\n            { state.isUserEditing ? \"Cancelar cambios\" : \"Editar\" }\n          </a>\n          <form onSubmit={handleSubmit} className=\"uk-form-stacked uk-text-left\">\n            <p className=\"uk-margin-remove\">Nombres:</p>\n            <div className=\"uk-form-controls uk-margin-small\">\n              <input className=\"uk-input uk-border-pill uk-text-center\" type=\"text\" name=\"first_name\" onChange={handleInput} value={form.first_name !== undefined ? form.first_name : user.first_name} disabled={!state.isUserEditing} required />\n            </div>\n            <p className=\"uk-margin-remove\">Apellidos:</p>\n            <div className=\"uk-form-controls uk-margin-small\">\n              <input className=\"uk-input uk-border-pill uk-text-center\" type=\"text\" name=\"last_name\" onChange={handleInput} value={form.last_name !== undefined ? form.last_name : user.last_name} disabled={!state.isUserEditing} required />\n            </div>\n            <p className=\"uk-margin-remove\">Teléfono:</p>\n            <div className=\"uk-form-controls uk-margin-small\">\n              <input className=\"uk-input uk-border-pill uk-text-center border-white\" type=\"text\" name=\"phone_number\" onChange={handleInput} value={form.phone_number !== undefined ? form.phone_number : user.phone_number} minLength={10} maxLength={10} disabled={!state.isUserEditing} />\n            </div>\n            <p className=\"uk-margin-remove\">Fecha de nacimiento:</p>\n            <div className=\"uk-form-controls uk-margin-small\" hidden={state.isUserEditing}>\n              <input className=\"uk-input uk-border-pill uk-text-center\" type=\"text\" id=\"date_of_birth\" value={moment(user.date_of_birth).format('LL')} disabled={!state.isUserEditing} />\n            </div>\n            <div className=\"uk-form-controls uk-margin-small\" hidden={!state.isUserEditing}>\n              <input onChange={event=> {validateDate(event); handleInput(event)} } id=\"date_of_birth_input\" name=\"date_of_birth\" className=\"uk-input uk-border-pill uk-text-center\" type=\"date\" defaultValue={moment(user.date_of_birth).format('YYYY-MM-DD')} max={maxDate} disabled={!state.isUserEditing} required />\n            </div>\n            <p className=\"uk-text-center uk-text-danger\">{state.errorMessage}</p>\n            <button type=\"submit\" className=\"uk-button uk-button-primary uk-button uk-border-pill uk-width-2-3 uk-width-1-4@m uk-align-center uk-margin\" hidden={!state.isUserEditing} disabled={state.isButtonDisabled}>\n              { !state.spinnerState ? \"Guardar cambios\" : \"Guardando\"}  <div className={ state.spinnerState ? 'uk-visible' : 'uk-hidden'} uk-spinner=\"true\"></div>\n            </button>\n          </form>\n        </div>\n        \n      </div>\n    </Fragment>\n  )\n\n}\n\nexport default Profile","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\n\n// Import Components for navigation\nimport Login from './components/auth/Login';\nimport Signup from './components/auth/Signup';\nimport Home from './components/home/Home';\nimport Landing from './components/home/Landing'\nimport Profile from './components/common/Profile'\n\nconst Router = () => {\n\n  return (\n    <Switch>\n\n      <Route exact path=\"/\">\n        <Landing />\n      </Route>\n      <Route path=\"/login\">\n        <Login />\n      </Route>\n      <Route path=\"/registro\">\n        <Signup />\n      </Route>\n      <Route path=\"/home\">\n        <Home />\n      </Route>\n      <Route path=\"/perfil\">\n        <Profile />\n      </Route>\n\n    </Switch>\n  )\n};\n\nexport default Router;","import React, { useContext } from 'react';                // Import React and useContext hook\nimport { Link, NavLink } from 'react-router-dom';         // Import NavLink for \"navigation\"\nimport { useHistory } from 'react-router-dom';            // Import useHistory for \"redirection\"\nimport { AppContext }  from '../../AppContext';           // Import AppContext to use created context\nimport { logout } from '../../services/auth-services';    // Import logout service for logout functionality\n\n\n// Declare Nav functional component (Navigation Bar)\nconst Navbar = () => {\n  \n  // Destructure user state variable and resetUserContext function from context\n  const { user, resetUserContext } = useContext(AppContext);\n  // Destructure push method from useHistory to \"redirect\" user\n  const { push } = useHistory();\n\n  // Declare function for handling logout button\n  const handleLogout = () => {\n\n    logout();                   // Execute logout function (clear localStorage)\n    push('/login');             // Redirect user to login\n    resetUserContext();         // delete user data from context to an empty object\n\n  };\n\n  return (\n\n    <nav className=\"uk-navbar uk-navbar-container uk-navbar-transparent uk-flex uk-flex-between uk-flex-middle uk-flex-wrap\">\n      \n      <ul className=\"uk-navbar-nav uk-height-1-1\">\n          <li className=\"uk-active uk-flex uk-flex-middle uk-height-1-1 uk-margin-left\">\n            <NavLink to={ user._id ? \"/home\" : \"/\"}>\n              El Workshop\n            </NavLink>\n          </li>\n      </ul>\n      \n      \n          \n          { user._id ? \n            <ul className=\"menu uk-navbar-nav\">\n              <li className=\"uk-active\">\n                <NavLink to=\"/perfil\">\n                  <div className=\"uk-width-auto uk-margin-small-right\">\n                    <img className=\"uk-border-circle\" width={40} height={40} src={user.profile_picture} alt=\"User profile\" />\n                  </div>\n                  <p className=\"uk-margin-remove\">Mi Perfil</p>\n                </NavLink>\n              </li>\n              <li className=\"uk-active\">\n                <NavLink to=\"/login\">\n                  <button className=\"uk-button uk-button-primary uk-border-pill\" onClick={handleLogout} >\n                    Logout\n                  </button>\n                </NavLink>\n              </li>\n            </ul>\n            :\n            <ul className=\"menu uk-navbar-nav\">\n              <li className=\"uk-active uk-flex uk-flex-center uk-flex-middle\">\n                <Link to=\"/login\" className=\"uk-margin-remove uk-padding-remove\">\n                  <button className=\"uk-button uk-button-white uk-border-pill\">\n                    Inicia Sesión\n                  </button>\n                </Link>\n              </li>\n              <li className=\"uk-active uk-flex uk-flex-center uk-flex-middle\">\n                <Link to=\"/registro\">\n                  <button className=\"uk-button uk-button-primary uk-border-pill\">\n                    Regístrate\n                  </button>\n                </Link>\n              </li>\n            </ul>\n          }\n\n    </nav>\n    \n  );\n\n};\n\nexport default Navbar;","import React from 'react';\nimport Router from './Router';\nimport './App.css';\nimport Navbar from './components/common/Navbar'\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Navbar />\n      <main>\n        <Router />\n      </main>\n      \n      \n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n// Import BrowserRouter to allow the user to navigate within the app by setting defined routes. See ./Router.js for more information\nimport { BrowserRouter } from 'react-router-dom';\n\n// Import the Provider which will allow to pass down the state variables and methods to its descendants\nimport AppProvider from './AppContext';\n\n// Import UIkit for styles\nimport UIkit from 'uikit';\nimport Icons from 'uikit/dist/js/uikit-icons';\nimport 'uikit/dist/css/uikit.min.css';\n\nUIkit.use(Icons);   // Execute to allow icon use\n\n// Create a component that: Provides state variables and methods AND router functionality for navigation, to the APP\nconst WithRouterAndProvider = () => (\n  <AppProvider>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </AppProvider>\n)\n\nReactDOM.render(<WithRouterAndProvider />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}